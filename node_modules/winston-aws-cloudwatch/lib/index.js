'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _winston = require('winston');

var _cloudwatchClient = require('./cloudwatch-client');

var _cloudwatchClient2 = _interopRequireDefault(_cloudwatchClient);

var _logItem = require('./log-item');

var _logItem2 = _interopRequireDefault(_logItem);

var _relay = require('./relay');

var _relay2 = _interopRequireDefault(_relay);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var CloudWatchTransport = function (_Transport) {
  (0, _inherits3.default)(CloudWatchTransport, _Transport);

  function CloudWatchTransport(options) {
    (0, _classCallCheck3.default)(this, CloudWatchTransport);

    var _this = (0, _possibleConstructorReturn3.default)(this, (CloudWatchTransport.__proto__ || (0, _getPrototypeOf2.default)(CloudWatchTransport)).call(this, options));

    var client = new _cloudwatchClient2.default(options.logGroupName, options.logStreamName, options);
    _this._relay = new _relay2.default(client, options);
    _this._relay.on('error', function (err) {
      return _this.emit('error', err);
    });
    _this._relay.start();
    return _this;
  }

  (0, _createClass3.default)(CloudWatchTransport, [{
    key: 'log',
    value: function log(level, msg, meta, callback) {
      this._relay.submit(new _logItem2.default(+new Date(), level, msg, meta, callback));
    }
  }]);
  return CloudWatchTransport;
}(_winston.Transport);

exports.default = CloudWatchTransport;